





















# connect to the emulator’s adb daemon
docker exec pf_droidflow adb connect pf_emulator:5556

# confirm the device is visible
docker exec pf_droidflow adb devices

# capture a screenshot
docker exec pf_droidflow bash -lc 'adb exec-out screencap -p' > snap-$(date +%Y%m%d-%H%M%S).png









docker exec pf_droidflow bash -lc 'adb -H pf_emulator -P 5037 -s emulator-5554 exec-out screencap -p' > snap-$(date +%Y%m%d-%H%M%S).png


docker inspect pf_droidflow --format '{{json .NetworkSettings.Ports}}' | jq
sudo ss -lntp '( sport = :5000 )'



# ใน pf_emulator
docker exec pf_emulator adb kill-server
docker exec pf_emulator adb start-server
docker exec pf_emulator adb -s emulator-5554 tcpip 5555
docker exec pf_emulator adb -s emulator-5554 forward tcp:5556 tcp:5555

# ใน pf_droidflow
docker exec pf_droidflow adb kill-server
docker exec pf_droidflow adb start-server
docker exec pf_droidflow adb connect pf_emulator:5556
docker exec pf_droidflow adb devices


เริ่ม stack ได้ด้วย make up (หรือ docker compose up -d) ซึ่งจะ build และ start คอนเทนเนอร์ทั้งหมด

หากต้องการให้ ADB ภายในคอนเทนเนอร์ reverse port 5000 ให้รัน ./start_host.sh ซึ่งจะ kill ADB ฝั่งโฮสต์, start stack และทำ adb reverse tcp:5000 tcp:5000 ให้โดยอัตโนมัติ

เมื่อคอนเทนเนอร์ทำงานแล้ว Web UI ของ pf_droidflow จะถูกเปิดบนพอร์ต 5000 ของเครื่องโฮสต์ เข้าถึงได้ที่ http://<host-ip>:5000/

Testing
⚠️ No tests were executed; response based on static inspection of repository files.


docker compose up -d

docker exec pf_droidflow adb devices

docker exec pf_droidflow adb connect pf_emulator:5556
